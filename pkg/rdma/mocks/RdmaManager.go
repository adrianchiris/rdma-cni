// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	ns "github.com/containernetworking/plugins/pkg/ns"
	mock "github.com/stretchr/testify/mock"
)

// RdmaManager is an autogenerated mock type for the RdmaManager type
type RdmaManager struct {
	mock.Mock
}

// GetRdmaDevsForPciDev provides a mock function with given fields: pciDev
func (_m *RdmaManager) GetRdmaDevsForPciDev(pciDev string) ([]string, error) {
	ret := _m.Called(pciDev)

	var r0 []string
	if rf, ok := ret.Get(0).(func(string) []string); ok {
		r0 = rf(pciDev)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(pciDev)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSystemRdmaMode provides a mock function with given fields:
func (_m *RdmaManager) GetSystemRdmaMode() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MoveRdmaDevToNs provides a mock function with given fields: rdmadev, netNs
func (_m *RdmaManager) MoveRdmaDevToNs(rdmadev string, netNs ns.NetNS) error {
	ret := _m.Called(rdmadev, netNs)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, ns.NetNS) error); ok {
		r0 = rf(rdmadev, netNs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetSystemRdmaMode provides a mock function with given fields: mode
func (_m *RdmaManager) SetSystemRdmaMode(mode string) error {
	ret := _m.Called(mode)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(mode)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
